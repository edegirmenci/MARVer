<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

//GripperState -&gt; 0: INIT, 1:OPEN, 2:MOVING, 3:CLOSE
int GripperState[2]={0,0};
//ProductState -&gt; 0: INIT, 1:NONE, 2:SODA, 3:WATER
int ProductState[2];
//RobotState -&gt; 0: INIT, 1:BAND, 2:HOME, 3:RED, 4:WHITE, 5:MOVING
int RobotState[2];

//Behaviour trigger
chan grasp[2];
chan release[2];
chan clearDetector[2];

//System startup
broadcast chan startRobot[2];

//Distance sensors
int D1=0;
int D2=0;

//Critical region
bool RedRegion=false;
bool WhiteRegion=false;




</declaration>
	<template>
		<name>ConveyorBand</name>
		<location id="id0" x="263" y="42">
			<name x="289" y="34">water</name>
		</location>
		<location id="id1" x="-76" y="-25">
			<name x="-119" y="-68">initial</name>
		</location>
		<location id="id2" x="-263" y="-42">
			<name x="-273" y="-76">start</name>
		</location>
		<location id="id3" x="170" y="-246">
			<name x="160" y="-280">soda</name>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="205" y="-101">D1:=1,D2:=1</label>
			<nail x="187" y="-127"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="assignment" x="-85" y="-238">D1:=1,D2:=0</label>
			<nail x="-34" y="-204"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="assignment" x="1" y="-101">D1:=0,D2:=0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="assignment" x="331" y="-170">D1:=1,D2:=0</label>
			<nail x="323" y="-153"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="68" y="93">D1:=0,D2:=0</label>
			<nail x="195" y="51"/>
			<nail x="51" y="93"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="assignment" x="51" y="-34">D1:=1,D2:=1</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="assignment" x="-195" y="-34">D1:=0,
D2:=0</label>
		</transition>
	</template>
	<template>
		<name>GripperTool</name>
		<parameter>const int[0,1] robotID</parameter>
		<declaration>clock wait;

//GripperTargetState  0:OPEN 2:CLOSE
int GripperTargetState[2]={0,0};</declaration>
		<location id="id4" x="-136" y="85">
			<name x="-119" y="68">MOVING</name>
		</location>
		<location id="id5" x="119" y="-68">
			<name x="109" y="-102">INIT</name>
		</location>
		<location id="id6" x="-391" y="85">
			<name x="-374" y="59">CLOSE</name>
		</location>
		<location id="id7" x="119" y="93">
			<name x="136" y="85">OPEN</name>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id4"/>
			<target ref="id7"/>
			<label kind="guard" x="-25" y="255">wait&gt;=3 &amp;&amp; GripperTargetState[robotID]==1</label>
			<label kind="synchronisation" x="-25" y="229">clearDetector[robotID]!</label>
			<label kind="assignment" x="-25" y="280">GripperState[robotID] := 1</label>
			<nail x="110" y="229"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-331" y="195">release[robotID]?</label>
			<label kind="assignment" x="-365" y="212">GripperState[robotID] :=2 , wait:=0,
GripperTargetState[robotID]:=1</label>
			<nail x="-136" y="212"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="guard" x="-493" y="-93">wait&gt;=3 &amp;&amp; GripperTargetState[robotID]==3</label>
			<label kind="assignment" x="-493" y="-68">GripperState[robotID] := 3</label>
			<nail x="-391" y="-42"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-110" y="-127">grasp[robotID]?</label>
			<label kind="assignment" x="-144" y="-102">GripperState[robotID] := 2, wait:=0,
GripperTargetState[robotID]:=3</label>
			<nail x="-128" y="-50"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="127" y="-34">startRobot[robotID]?</label>
			<label kind="assignment" x="127" y="-8">GripperState[robotID] := 1</label>
		</transition>
	</template>
	<template>
		<name>RobotController</name>
		<parameter>const int[0,1] robotID</parameter>
		<declaration>clock wait;

//RobotTarhetState -&gt; 0:BAND, 1:HOME, 2:RED, 3:WHITE, 4:MOVING
int RobotTargetState[2];</declaration>
		<location id="id8" x="578" y="8">
			<name x="510" y="-9">WHITE</name>
		</location>
		<location id="id9" x="297" y="17">
			<name x="279" y="-26">MOVING_HW</name>
		</location>
		<location id="id10" x="586" y="348">
			<name x="603" y="331">RED</name>
		</location>
		<location id="id11" x="-578" y="-34">
			<name x="-588" y="-68">INIT</name>
		</location>
		<location id="id12" x="-578" y="221">
			<name x="-595" y="238">BAND</name>
		</location>
		<location id="id13" x="-153" y="229">
			<name x="-170" y="246">HOME</name>
		</location>
		<location id="id14" x="306" y="365">
			<name x="340" y="348">MOVING_HR</name>
		</location>
		<location id="id15" x="-348" y="221">
			<name x="-391" y="170">MOVING_HB</name>
		</location>
		<init ref="id11"/>
		<transition color="#0000ff">
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="-884" y="212">GripperState[robotID]==1 &amp;&amp; 
ProductState[robotID]!=1</label>
			<label kind="synchronisation" x="-884" y="187">grasp[robotID]!</label>
			<nail x="-697" y="170"/>
			<nail x="-697" y="272"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id15"/>
			<target ref="id12"/>
			<label kind="guard" x="-569" y="110">wait&gt;=3 &amp;&amp; RobotTargetState[robotID]== 1</label>
			<label kind="assignment" x="-561" y="127">RobotState[robotID]:=1</label>
			<nail x="-467" y="153"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id13"/>
			<target ref="id15"/>
			<label kind="guard" x="-305" y="16">GripperState[robotID]==1</label>
			<label kind="assignment" x="-306" y="34">RobotState[robotID]:=5, wait:=0,
RobotTargetState[robotID]:= 1</label>
			<nail x="-263" y="76"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id15"/>
			<target ref="id13"/>
			<label kind="guard" x="-391" y="374">wait&gt;=3 &amp;&amp; RobotTargetState[robotID]== 2</label>
			<label kind="assignment" x="-365" y="391">RobotState[robotID]:=2</label>
			<nail x="-280" y="374"/>
		</transition>
		<transition color="#0000ff">
			<source ref="id12"/>
			<target ref="id15"/>
			<label kind="guard" x="-569" y="297">GripperState[robotID]== 3</label>
			<label kind="assignment" x="-569" y="314">RobotState[robotID]:= 5, wait:= 0, 
RobotTargetState[robotID]:= 2</label>
			<nail x="-467" y="297"/>
		</transition>
		<transition color="#00ffff">
			<source ref="id9"/>
			<target ref="id13"/>
			<label kind="guard" x="17" y="110">wait&gt;=3 &amp;&amp;  RobotTargetState[robotID]==2</label>
			<label kind="assignment" x="17" y="127">RobotState[robotID]:=2, 
WhiteRegion:=false, 
RedRegion := (robotID == 1 ? false : RedRegion)</label>
			<nail x="34" y="93"/>
		</transition>
		<transition color="#00ffff">
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="357" y="76">GripperState[robotID] == 1</label>
			<label kind="assignment" x="357" y="93">wait := 0 , RobotState[robotID] := 5,
RobotTargetState[robotID]:=2</label>
			<nail x="433" y="76"/>
		</transition>
		<transition color="#00ffff">
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="323" y="-111">wait&gt;=3 &amp;&amp; RobotTargetState[robotID]==4</label>
			<label kind="assignment" x="382" y="-85">RobotState[robotID]:= 4</label>
			<nail x="416" y="-59"/>
		</transition>
		<transition color="#00ffff">
			<source ref="id13"/>
			<target ref="id9"/>
			<label kind="guard" x="-76" y="-76">ProductState[robotID] == 3 
&amp;&amp; !WhiteRegion</label>
			<label kind="assignment" x="-76" y="-42">wait := 0, RobotTargetState[robotID]:=4,
WhiteRegion:=true, RobotState[robotID]:=5,
RedRegion:=(robotID==1?true:RedRegion)</label>
			<nail x="-8" y="34"/>
			<nail x="17" y="25"/>
		</transition>
		<transition color="#ff00ff">
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="-119" y="425">wait&gt;=3 &amp;&amp;  RobotTargetState[robotID]==2</label>
			<label kind="assignment" x="-119" y="450">RobotState[robotID]:=2, 
RedRegion:=false, 
WhiteRegion:=(robotID==0?false:WhiteRegion)</label>
			<nail x="-34" y="416"/>
		</transition>
		<transition color="#ff00ff">
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="guard" x="391" y="434">GripperState[robotID] == 1</label>
			<label kind="assignment" x="374" y="460">wait := 0 , RobotState[robotID] := 5,
RobotTargetState[robotID]:=2</label>
			<nail x="459" y="425"/>
		</transition>
		<transition color="#ff00ff">
			<source ref="id14"/>
			<target ref="id10"/>
			<label kind="guard" x="348" y="246">wait&gt;=3 &amp;&amp;  RobotTargetState[robotID]== 3</label>
			<label kind="assignment" x="408" y="272">RobotState[robotID]:=3</label>
			<nail x="450" y="289"/>
		</transition>
		<transition color="#ff00ff">
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="17" y="221">ProductState[robotID]== 2 
&amp;&amp; !RedRegion</label>
			<label kind="assignment" x="17" y="255">wait := 0 , 
RobotTargetState[robotID]:=3,RobotState[robotID]:=5,
RedRegion:=true, 
WhiteRegion:=(robotID==0?true:WhiteRegion)</label>
			<nail x="25" y="340"/>
			<nail x="25" y="340"/>
		</transition>
		<transition color="#00ffff">
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="680" y="0">release[robotID]!</label>
			<nail x="671" y="76"/>
			<nail x="671" y="-59"/>
		</transition>
		<transition color="#ff00ff">
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="688" y="339">release[robotID]!</label>
			<nail x="680" y="280"/>
			<nail x="680" y="416"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-722" y="17">startRobot[robotID]!</label>
			<label kind="assignment" x="-739" y="42">RobotState[robotID]:= 1</label>
		</transition>
	</template>
	<template>
		<name>ProductDetector</name>
		<parameter>const int[0,1] robotID</parameter>
		<location id="id16" x="-484" y="-144">
			<name x="-501" y="-178">NONE</name>
		</location>
		<location id="id17" x="-739" y="-144">
			<name x="-748" y="-119">INIT</name>
		</location>
		<location id="id18" x="25" y="-178">
			<name x="42" y="-187">SODA</name>
		</location>
		<location id="id19" x="25" y="-93">
			<name x="42" y="-102">WATER</name>
		</location>
		<init ref="id17"/>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-714" y="-187">startRobot[robotID]?</label>
			<label kind="assignment" x="-714" y="-170">ProductState[robotID]:=1</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-212" y="-42">clearDetector[robotID]?</label>
			<label kind="assignment" x="-212" y="-17">ProductState[robotID] := 1 , D1 := 0 , D2 := 0</label>
			<nail x="25" y="-17"/>
			<nail x="-221" y="-17"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-221" y="-280">clearDetector[robotID]?</label>
			<label kind="assignment" x="-221" y="-297">ProductState[robotID] := 1 , D1 := 0 , D2 := 0</label>
			<nail x="25" y="-255"/>
			<nail x="-247" y="-255"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id19"/>
			<label kind="guard" x="-229" y="-136">GripperState[robotID]==1 &amp;&amp; RobotState[robotID]==1 &amp;&amp;
D1 == 1 &amp;&amp; D2 == 1</label>
			<label kind="assignment" x="-204" y="-93">ProductState[robotID] := 3</label>
			<nail x="-238" y="-93"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id18"/>
			<label kind="guard" x="-229" y="-221">GripperState[robotID]==1 &amp;&amp; RobotState[robotID]==1 &amp;&amp;
D1 == 1 &amp;&amp; D2 == 0</label>
			<label kind="assignment" x="-212" y="-178">ProductState[robotID] := 2</label>
			<nail x="-263" y="-178"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.

R1 = RobotController(0);
R2 = RobotController(1);
G1=GripperTool(0);
G2=GripperTool(1);
S1=ProductDetector(0);
S2=ProductDetector(1);
B=ConveyorBand();


system R1,R2,G1,G2,S1,S2,B;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; R1.MOVING_HR &amp;&amp; R2.MOVING_HR
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.MOVING_HW &amp;&amp; R2.RED
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.MOVING_HW &amp;&amp; R2.MOVING_HW
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.WHITE &amp;&amp; R2.RED
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.WHITE &amp;&amp; R2.WHITE
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.RED &amp;&amp; R2.RED
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; R1.RED &amp;&amp; R2.WHITE
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
